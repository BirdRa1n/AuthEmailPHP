{"version":3,"sources":["screens/dashboard.js","screens/login.js","screens/register.js","App.js"],"names":["Dashboard","navigation","React","useState","data_user","name","email","DataUser","setDataUser","console","log","useEffect","a","async","AsyncStorage","getItem","jsonValue","JSON","parse","getData","NativeBaseProvider","Box","w","h","bg","Center","maxW","p","top","Heading","fontSize","Text","Login","formData","setData","errors","setErrors","show","setShow","Slide","in","placement","Alert","justifyContent","status","Icon","color","fontWeight","safeArea","py","size","_dark","mt","VStack","space","FormControl","Label","ErrorMessage","_text","Input","onChangeText","value","username","type","password","Link","alignSelf","Button","colorScheme","onPress","axios","get","params","then","response","req","data","undefined","error","stringify","setItem","navigate","setTimeout","HStack","TouchableOpacity","href","Register","autoCorrect","pt","alert","success","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerShown"],"mappings":"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","file":"static/js/app.26ce810e.chunk.js","sourcesContent":["import { NativeBaseProvider, Text, Box, Center, Heading } from \"native-base\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\n\n\nexport default function Dashboard({ navigation }){\n    const [DataUser, setDataUser] = React.useState({\n        data_user:[\n            name => '',\n            email => ''\n        ]\n    });\n    console.log(DataUser)\n    const getData = async () => {\n        try {\n          const jsonValue = await AsyncStorage.getItem(\"@data_user\");\n          setDataUser(JSON.parse(jsonValue));\n        } catch (e) {\n          console.log(e);\n        }\n      };\n      useEffect(() => {\n        getData();\n      }, []);\n    \n    return(\n        <NativeBaseProvider>\n           <Box w={'100%'} h={'100%'} bg={'white'} >\n            <Center>\n            <Box w={'80%'} maxW={400} h={100} bg={'light.50'} p={4} top={10}>\n            <Heading fontSize={'xl'}>Name: <Text>{DataUser.data_user.name}</Text></Heading>\n            <Heading fontSize={'xl'}>Email: <Text>{DataUser.data_user.email}</Text></Heading>\n\n            </Box>\n            </Center>\n           </Box>\n        </NativeBaseProvider>\n    );\n}","import { NativeBaseProvider, Text, Slide, CloseIcon, IconButton, Collapse, Alert, useToast, Box, Center, Heading, VStack, FormControl, Input, Link, Button, HStack, } from \"native-base\";\nimport { TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function Login({ navigation }) {\n    const [formData, setData] = React.useState({});\n    const [DataUser, setDataUser] = React.useState({});\n    const [errors, setErrors] = React.useState(\"\");\n    const [show, setShow] = React.useState(false);\n\n\n\n\n\n    function login() {\n        axios\n            .get(\"https://birdra1n.x10.bz/AuthMail/singIN/\", {\n                params: {\n                    username: formData.username,\n                    password: formData.password\n                },\n            })\n            .then(function (response) {\n                var req = response.data;\n\n                if (req.error == undefined) {\n                    const jsonValue = JSON.stringify(req)\n                    AsyncStorage.setItem('@data_user', jsonValue)\n                    navigation.navigate('Dashboard');\n                } else {\n                    setErrors(req.error);\n                    setShow(true)\n                    setTimeout(() => {\n                        setShow(false);\n                    }, 1000);\n\n                }\n            });\n\n    }\n\n    /*const SlideTOP = () => {\n        return(\n            <Center>\n                <Collapse isOpen={show} bottom={0.5}>\n                <Alert  w=\"100%\" variant={'left-accent'} colorScheme=\"red\" status=\"success\">\n                <VStack space={2} flexShrink={1} w=\"100%\">\n                  <HStack flexShrink={1} space={2} alignItems=\"center\" justifyContent=\"space-between\">\n                    <HStack space={2} flexShrink={1} alignItems=\"center\">\n                      <Alert.Icon />\n                      <Text>\n                        Selection successfully moved!\n                      </Text>\n                    </HStack>\n                  </HStack>\n                </VStack>\n              </Alert>\n                </Collapse>\n            </Center>\n        )\n    };*/\n\n    return (\n        <NativeBaseProvider>\n            <Slide in={show} placement=\"top\">\n                <Alert justifyContent=\"center\" status=\"error\">\n                    <Alert.Icon />\n                    <Text color=\"error.600\" fontWeight=\"medium\">\n                        {errors}\n                    </Text>\n                </Alert>\n            </Slide>\n            <Box safeArea w={'100%'} h={'100%'} bg={'white'}>\n\n\n                <Center top={-32}>\n                    <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\n                        <Heading size=\"lg\" fontWeight=\"600\" color=\"coolGray.800\" _dark={{\n                            color: \"warmGray.50\"\n                        }}>\n                            AuthEmailPHP\n                        </Heading>\n                        <Heading mt=\"1\" _dark={{\n                            color: \"warmGray.200\"\n                        }} color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n                            Sign in to continue!\n                        </Heading>\n\n                        <VStack space={3} mt=\"5\">\n                            <FormControl >\n                                <FormControl.Label>Username</FormControl.Label>\n                                <FormControl.ErrorMessage _text={{\n                                    fontSize: 'xs'\n                                }}>\n                                    error\n                                </FormControl.ErrorMessage>\n                                <Input onChangeText={value => setData({\n                                    ...formData,\n                                    username: value\n                                })} />\n                            </FormControl>\n                            <FormControl>\n                                <FormControl.Label>Password</FormControl.Label>\n                                <Input type=\"password\" onChangeText={value => setData({\n                                    ...formData,\n                                    password: value\n                                })} />\n                                <Link _text={{\n                                    fontSize: \"xs\",\n                                    fontWeight: \"500\",\n                                    color: \"indigo.500\"\n                                }} alignSelf=\"flex-end\" mt=\"1\">\n                                    Forget Password?\n                                </Link>\n                            </FormControl>\n                            <Button mt=\"2\" colorScheme=\"indigo\" onPress={() => login()}>\n                                Sign in\n                            </Button>\n                            <HStack mt=\"6\" justifyContent=\"center\">\n                                <Text fontSize=\"sm\" color=\"coolGray.600\" _dark={{\n                                    color: \"warmGray.200\"\n                                }}>\n                                    I'm a new user.{\" \"}\n                                </Text>\n                                <TouchableOpacity onPress={()=>navigation.navigate('register')}>\n                                    <Box _text={{\n                                        color: \"indigo.500\",\n                                        fontWeight: \"medium\",\n                                        fontSize: \"sm\"\n                                    }} href=\"#\">\n                                        Sign Up\n                                    </Box>\n                                </TouchableOpacity>\n                            </HStack>\n                        </VStack>\n                    </Box>\n\n                </Center>\n            </Box>\n        </NativeBaseProvider>\n    );\n}","import { NativeBaseProvider, Text, Slide, CloseIcon, IconButton, Collapse, Alert, useToast, Box, Center, Heading, VStack, FormControl, Input, Link, Button, HStack, } from \"native-base\";\nimport { TouchableOpacity } from \"react-native\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport default function Register({ navigation }) {\n    const [formData, setData] = React.useState({});\n    const [errors, setErrors] = React.useState(\"\");\n    const [show, setShow] = React.useState(false);\n\n\n    function singUp() {\n        axios\n            .get(\"https://birdra1n.x10.bz/AuthMail/signUP/\", {\n                params: {\n                    username: formData.username,\n                    password: formData.password,\n                    email: formData.email,\n                    name: formData.name\n                },\n            })\n            .then(function (response) {\n                var req = response.data;\n                if (req.error == undefined) {\n                    alert(req.success)\n                    navigation.navigate('home');\n                } else {\n                    setErrors(req.error);\n                    setShow(true)\n                    setTimeout(() => {\n                        setShow(false);\n                    }, 3000);\n                }\n            });\n    }\n\n\n    return (\n        <NativeBaseProvider>\n            <Slide in={show} placement=\"top\">\n                <Alert justifyContent=\"center\" status=\"error\">\n                    <Alert.Icon />\n                    <Text color=\"error.600\" fontWeight=\"medium\">\n                        {errors}\n                    </Text>\n                </Alert>\n            </Slide>\n            <Box safeArea w={'100%'} h={'100%'} bg={'white'}>\n\n\n                <Center top={-32}>\n                    <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\n                        <Heading size=\"lg\" fontWeight=\"600\" color=\"coolGray.800\" _dark={{\n                            color: \"warmGray.50\"\n                        }}>\n                            AuthEmailPHP\n                        </Heading>\n                        <Heading mt=\"1\" _dark={{\n                            color: \"warmGray.200\"\n                        }} color=\"coolGray.600\" fontWeight=\"medium\" size=\"xs\">\n                            Create an account to continue!\n                        </Heading>\n\n                        <VStack space={3} mt=\"5\">\n                            <FormControl >\n                                <FormControl.Label>Name</FormControl.Label>\n                                <FormControl.ErrorMessage _text={{\n                                    fontSize: 'xs'\n                                }}>\n                                    error\n                                </FormControl.ErrorMessage>\n                                <Input onChangeText={value => setData({\n                                    ...formData,\n                                    name: value\n                                })} />\n                            </FormControl>\n                            <FormControl>\n                                <FormControl.Label>Username</FormControl.Label>\n                                <Input type=\"username\" autoCorrect={false} onChangeText={value => setData({\n                                    ...formData,\n                                    username: value\n                                })} />\n\n                            </FormControl>\n                            <FormControl>\n                                <FormControl.Label>Email</FormControl.Label>\n                                <Input type=\"email\" autoCorrect={false} onChangeText={value => setData({\n                                    ...formData,\n                                    email: value\n                                })} />\n\n                            </FormControl>\n                            <FormControl>\n                                <FormControl.Label>Password</FormControl.Label>\n                                <Input type=\"username\" onChangeText={value => setData({\n                                    ...formData,\n                                    password: value\n                                })} />\n\n                            </FormControl>\n\n                            <Button pt=\"2\" colorScheme=\"indigo\" onPress={() => singUp()}>\n                                Sign Up\n                            </Button>\n                            <HStack mt=\"6\" justifyContent=\"center\">\n                                <Text fontSize=\"sm\" color=\"coolGray.600\" _dark={{\n                                    color: \"warmGray.200\"\n                                }}>\n                                    I'm already a user.{\" \"}\n                                </Text>\n                                <TouchableOpacity onPress={() => navigation.navigate('home')}>\n                                    <Box _text={{\n                                        color: \"indigo.500\",\n                                        fontWeight: \"medium\",\n                                        fontSize: \"sm\"\n                                    }} href=\"#\">\n                                        Sign In\n                                    </Box>\n                                </TouchableOpacity>\n                            </HStack>\n                        </VStack>\n                    </Box>\n\n                </Center>\n            </Box>\n        </NativeBaseProvider>\n    );\n}","import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Dashboard from './screens/dashboard';\nimport Login from './screens/login';\nimport Register from './screens/register';\n\nconst Stack = createNativeStackNavigator();\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"home\">\n        <Stack.Screen name=\"home\" component={Login} options={{ headerShown: false }} />\n        <Stack.Screen name=\"register\" component={Register} options={{ headerShown: false }}/>\n        <Stack.Screen name=\"Dashboard\" component={Dashboard} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;"],"sourceRoot":""}